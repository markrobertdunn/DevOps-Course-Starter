name: Continuous Integration
on: 
  push:
    paths-ignore:
      - 'documentation/**'
      - 'README.md'
  pull_request:

jobs:
  Test_Build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: build test image
      run: docker build --target test --tag my-test-image .

    - name: Run tests
      run: docker run --env-file .env.test my-test-image



  Production_Build:
    name: Build and Publish
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/exercise-12' }}
    runs-on: ubuntu-latest    
    needs: Test_Build

    steps:
      - uses: actions/checkout@v2
        
      - name: Build Production Image
        run: docker build --target production --tag markrobertdunn/todo-app:$GITHUB_SHA --tag markrobertdunn/todo-app:latest .

      - name: Login to Docker
        run: docker login --username markrobertdunn --password ${{ secrets.DOCKERHUBKEY }}

      - name: Publish Production Image to Docker
        run: docker push markrobertdunn/todo-app:$GITHUB_SHA

      - name: Publish latest Image to Docker
        run: docker push markrobertdunn/todo-app:latest


  Production_Release:
    name: Release
    runs-on: ubuntu-latest
#    needs: Production_Build
    env: 
        ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
        ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
        ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
        ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}

        TF_VAR_prefix: prod
        TF_VAR_secret_key: ${{secrets.SECRET_KEY}}
    steps:
      - uses: actions/checkout@v2

      - name: Intiate Terraform
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve

      - name: Pull to azure from dockerhub
        run: curl -dH -X POST "$(terraform output -raw webhook)"